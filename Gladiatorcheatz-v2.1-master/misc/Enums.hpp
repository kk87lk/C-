#pragma once

enum ECstrike15UserMessages
{
    CS_UM_VGUIMenu = 1,
    CS_UM_Geiger = 2,
    CS_UM_Train = 3,
    CS_UM_HudText = 4,
    CS_UM_SayText = 5,
    CS_UM_SayText2 = 6,
    CS_UM_TextMsg = 7,
    CS_UM_HudMsg = 8,
    CS_UM_ResetHud = 9,
    CS_UM_GameTitle = 10,
    CS_UM_Shake = 12,
    CS_UM_Fade = 13,
    CS_UM_Rumble = 14,
    CS_UM_CloseCaption = 15,
    CS_UM_CloseCaptionDirect = 16,
    CS_UM_SendAudio = 17,
    CS_UM_RawAudio = 18,
    CS_UM_VoiceMask = 19,
    CS_UM_RequestState = 20,
    CS_UM_Damage = 21,
    CS_UM_RadioText = 22,
    CS_UM_HintText = 23,
    CS_UM_KeyHintText = 24,
    CS_UM_ProcessSpottedEntityUpdate = 25,
    CS_UM_ReloadEffect = 26,
    CS_UM_AdjustMoney = 27,
    CS_UM_UpdateTeamMoney = 28,
    CS_UM_StopSpectatorMode = 29,
    CS_UM_KillCam = 30,
    CS_UM_DesiredTimescale = 31,
    CS_UM_CurrentTimescale = 32,
    CS_UM_AchievementEvent = 33,
    CS_UM_MatchEndConditions = 34,
    CS_UM_DisconnectToLobby = 35,
    CS_UM_PlayerStatsUpdate = 36,
    CS_UM_DisplayInventory = 37,
    CS_UM_WarmupHasEnded = 38,
    CS_UM_ClientInfo = 39,
    CS_UM_XRankGet = 40,
    CS_UM_XRankUpd = 41,
    CS_UM_CallVoteFailed = 45,
    CS_UM_VoteStart = 46,
    CS_UM_VotePass = 47,
    CS_UM_VoteFailed = 48,
    CS_UM_VoteSetup = 49,
    CS_UM_ServerRankRevealAll = 50,
    CS_UM_SendLastKillerDamageToClient = 51,
    CS_UM_ServerRankUpdate = 52,
    CS_UM_ItemPickup = 53,
    CS_UM_ShowMenu = 54,
    CS_UM_BarTime = 55,
    CS_UM_AmmoDenied = 56,
    CS_UM_MarkAchievement = 57,
    CS_UM_MatchStatsUpdate = 58,
    CS_UM_ItemDrop = 59,
    CS_UM_GlowPropTurnOff = 60,
    CS_UM_SendPlayerItemDrops = 61,
    CS_UM_RoundBackupFilenames = 62,
    CS_UM_SendPlayerItemFound = 63,
    CS_UM_ReportHit = 64,
    CS_UM_XpUpdate = 65,
    CS_UM_QuestProgress = 66,
    CS_UM_ScoreLeaderboardData = 67,
    CS_UM_PlayerDecalDigitalSignature = 68,
    MAX_ECSTRIKE15USERMESSAGES
};


enum ItemDefinitionIndex
{
    ITEM_NONE = 0,
    WEAPON_DEAGLE = 1,
    WEAPON_ELITE = 2,
    WEAPON_FIVESEVEN = 3,
    WEAPON_GLOCK = 4,
    WEAPON_AK47 = 7,
    WEAPON_AUG = 8,
    WEAPON_AWP = 9,
    WEAPON_FAMAS = 10,
    WEAPON_G3SG1 = 11,
    WEAPON_GALILAR = 13,
    WEAPON_M249 = 14,
    WEAPON_M4A1 = 16,
    WEAPON_MAC10 = 17,
    WEAPON_P90 = 19,
    WEAPON_UMP45 = 24,
    WEAPON_XM1014 = 25,
    WEAPON_BIZON = 26,
    WEAPON_MAG7 = 27,
    WEAPON_NEGEV = 28,
    WEAPON_SAWEDOFF = 29,
    WEAPON_TEC9 = 30,
    WEAPON_TASER = 31,
    WEAPON_HKP2000 = 32,
    WEAPON_MP7 = 33,
    WEAPON_MP9 = 34,
    WEAPON_NOVA = 35,
    WEAPON_P250 = 36,
    WEAPON_SCAR20 = 38,
    WEAPON_SG553 = 39,
    WEAPON_SSG08 = 40,
    WEAPON_KNIFE = 42,
    WEAPON_FLASHBANG = 43,
    WEAPON_HEGRENADE = 44,
    WEAPON_SMOKEGRENADE = 45,
    WEAPON_MOLOTOV = 46,
    WEAPON_DECOY = 47,
    WEAPON_INCGRENADE = 48,
    WEAPON_C4 = 49,
    WEAPON_KNIFE_T = 59,
    WEAPON_M4A1_SILENCER = 60,
    WEAPON_USP_SILENCER = 61,
    WEAPON_CZ75A = 63,
    WEAPON_REVOLVER = 64,
    WEAPON_KNIFE_BAYONET = 500,
    WEAPON_KNIFE_FLIP = 505,
    WEAPON_KNIFE_GUT = 506,
    WEAPON_KNIFE_KARAMBIT = 507,
    WEAPON_KNIFE_M9_BAYONET = 508,
    WEAPON_KNIFE_TACTICAL = 509,
    WEAPON_KNIFE_FALCHION = 512,
    WEAPON_KNIFE_SURVIVAL_BOWIE = 514,
    WEAPON_KNIFE_BUTTERFLY = 515,
    WEAPON_KNIFE_PUSH = 516,
	GLOVE_STUDDED_BLOODHOUND = 5027,
	GLOVE_T_SIDE = 5028,
	GLOVE_CT_SIDE = 5029,
	GLOVE_SPORTY = 5030,
	GLOVE_SLICK = 5031,
	GLOVE_LEATHER_WRAP = 5032,
	GLOVE_MOTORCYCLE = 5033,
	GLOVE_SPECIALIST = 5034,
    MAX_ITEMDEFINITIONINDEX
};

enum ClassId
{
	ClassId_CTestTraceline = 196,
	ClassId_CTEWorldDecal = 197,
	ClassId_CTESpriteSpray = 194,
	ClassId_CTESprite = 193,
	ClassId_CTESparks = 192,
	ClassId_CTESmoke = 191,
	ClassId_CTEShowLine = 189,
	ClassId_CTEProjectedDecal = 186,
	ClassId_CFEPlayerDecal = 61,
	ClassId_CTEPlayerDecal = 185,
	ClassId_CTEPhysicsProp = 182,
	ClassId_CTEParticleSystem = 181,
	ClassId_CTEMuzzleFlash = 180,
	ClassId_CTELargeFunnel = 178,
	ClassId_CTEKillPlayerAttachments = 177,
	ClassId_CTEImpact = 176,
	ClassId_CTEGlowSprite = 175,
	ClassId_CTEShatterSurface = 188,
	ClassId_CTEFootprintDecal = 172,
	ClassId_CTEFizz = 171,
	ClassId_CTEExplosion = 169,
	ClassId_CTEEnergySplash = 168,
	ClassId_CTEEffectDispatch = 167,
	ClassId_CTEDynamicLight = 166,
	ClassId_CTEDecal = 164,
	ClassId_CTEClientProjectile = 163,
	ClassId_CTEBubbleTrail = 162,
	ClassId_CTEBubbles = 161,
	ClassId_CTEBSPDecal = 160,
	ClassId_CTEBreakModel = 159,
	ClassId_CTEBloodStream = 158,
	ClassId_CTEBloodSprite = 157,
	ClassId_CTEBeamSpline = 156,
	ClassId_CTEBeamRingPoint = 155,
	ClassId_CTEBeamRing = 154,
	ClassId_CTEBeamPoints = 153,
	ClassId_CTEBeamLaser = 152,
	ClassId_CTEBeamFollow = 151,
	ClassId_CTEBeamEnts = 150,
	ClassId_CTEBeamEntPoint = 149,
	ClassId_CTEBaseBeam = 148,
	ClassId_CTEArmorRicochet = 147,
	ClassId_CTEMetalSparks = 179,
	ClassId_CSteamJet = 142,
	ClassId_CSmokeStack = 135,
	ClassId_DustTrail = 247,
	ClassId_CFireTrail = 64,
	ClassId_SporeTrail = 253,
	ClassId_SporeExplosion = 252,
	ClassId_RocketTrail = 250,
	ClassId_SmokeTrail = 251,
	ClassId_CPropVehicleDriveable = 122,
	ClassId_ParticleSmokeGrenade = 249,
	ClassId_CParticleFire = 100,
	ClassId_MovieExplosion = 248,
	ClassId_CTEGaussExplosion = 174,
	ClassId_CEnvQuadraticBeam = 56,
	ClassId_CEmbers = 46,
	ClassId_CEnvWind = 60,
	ClassId_CPrecipitation = 116,
	ClassId_CPrecipitationBlocker = 117,
	ClassId_CBaseTempEntity = 18,
	ClassId_NextBotCombatCharacter = 0,
	ClassId_CEconWearable = 45,
	ClassId_CBaseAttributableItem = 4,
	ClassId_CEconEntity = 44,
	ClassId_CWeaponXM1014 = 244,
	ClassId_CWeaponTaser = 239,
	ClassId_CSmokeGrenade = 133,
	ClassId_CWeaponSG552 = 236,
	ClassId_CSensorGrenade = 129,
	ClassId_CWeaponSawedoff = 232,
	ClassId_CWeaponNOVA = 228,
	ClassId_CIncendiaryGrenade = 87,
	ClassId_CMolotovGrenade = 97,
	ClassId_CWeaponM3 = 220,
	ClassId_CKnifeGG = 94,
	ClassId_CKnife = 93,
	ClassId_CHEGrenade = 84,
	ClassId_CFlashbang = 66,
	ClassId_CWeaponElite = 211,
	ClassId_CDecoyGrenade = 40,
	ClassId_CDEagle = 39,
	ClassId_CWeaponUSP = 243,
	ClassId_CWeaponM249 = 219,
	ClassId_CWeaponUMP45 = 242,
	ClassId_CWeaponTMP = 241,
	ClassId_CWeaponTec9 = 240,
	ClassId_CWeaponSSG08 = 238,
	ClassId_CWeaponSG556 = 237,
	ClassId_CWeaponSG550 = 235,
	ClassId_CWeaponScout = 234,
	ClassId_CWeaponSCAR20 = 233,
	ClassId_CSCAR17 = 127,
	ClassId_CWeaponP90 = 231,
	ClassId_CWeaponP250 = 230,
	ClassId_CWeaponP228 = 229,
	ClassId_CWeaponNegev = 227,
	ClassId_CWeaponMP9 = 226,
	ClassId_CWeaponMP7 = 225,
	ClassId_CWeaponMP5Navy = 224,
	ClassId_CWeaponMag7 = 223,
	ClassId_CWeaponMAC10 = 222,
	ClassId_CWeaponM4A1 = 221,
	ClassId_CWeaponHKP2000 = 218,
	ClassId_CWeaponGlock = 217,
	ClassId_CWeaponGalilAR = 216,
	ClassId_CWeaponGalil = 215,
	ClassId_CWeaponG3SG1 = 214,
	ClassId_CWeaponFiveSeven = 213,
	ClassId_CWeaponFamas = 212,
	ClassId_CWeaponBizon = 207,
	ClassId_CWeaponAWP = 205,
	ClassId_CWeaponAug = 204,
	ClassId_CAK47 = 1,
	ClassId_CWeaponCSBaseGun = 209,
	ClassId_CWeaponCSBase = 208,
	ClassId_CC4 = 29,
	ClassId_CWeaponBaseItem = 206,
	ClassId_CBaseCSGrenade = 8,
	ClassId_CSmokeGrenadeProjectile = 134,
	ClassId_CSensorGrenadeProjectile = 130,
	ClassId_CMolotovProjectile = 98,
	ClassId_CItem_Healthshot = 91,
	ClassId_CItemDogtags = 92,
	ClassId_CDecoyProjectile = 41,
	ClassId_CFireCrackerBlast = 62,
	ClassId_CInferno = 88,
	ClassId_CChicken = 31,
	ClassId_CFootstepControl = 68,
	ClassId_CCSGameRulesProxy = 34,
	ClassId_CWeaponCubemap = 0,
	ClassId_CWeaponCycler = 210,
	ClassId_CTEPlantBomb = 183,
	ClassId_CTEFireBullets = 170,
	ClassId_CTERadioIcon = 187,
	ClassId_CPlantedC4 = 108,
	ClassId_CCSTeam = 38,
	ClassId_CCSPlayerResource = 36,
	ClassId_CCSPlayer = 35,
	ClassId_CCSRagdoll = 37,
	ClassId_CTEPlayerAnimEvent = 184,
	ClassId_CHostage = 85,
	ClassId_CHostageCarriableProp = 86,
	ClassId_CBaseCSGrenadeProjectile = 9,
	ClassId_CHandleTest = 83,
	ClassId_CTeamplayRoundBasedRulesProxy = 146,
	ClassId_CSpriteTrail = 140,
	ClassId_CSpriteOriented = 139,
	ClassId_CSprite = 138,
	ClassId_CRagdollPropAttached = 125,
	ClassId_CRagdollProp = 124,
	ClassId_CPredictedViewModel = 118,
	ClassId_CPoseController = 114,
	ClassId_CGameRulesProxy = 82,
	ClassId_CInfoLadderDismount = 89,
	ClassId_CFuncLadder = 74,
	ClassId_CTEFoundryHelpers = 173,
	ClassId_CEnvDetailController = 52,
	ClassId_CWorldVguiText = 246,
	ClassId_CWorld = 245,
	ClassId_CWaterLODControl = 203,
	ClassId_CWaterBullet = 202,
	ClassId_CVoteController = 201,
	ClassId_CVGuiScreen = 200,
	ClassId_CPropJeep = 121,
	ClassId_CPropVehicleChoreoGeneric = 0,
	ClassId_CTriggerSoundOperator = 199,
	ClassId_CBaseVPhysicsTrigger = 22,
	ClassId_CTriggerPlayerMovement = 198,
	ClassId_CBaseTrigger = 20,
	ClassId_CTest_ProxyToggle_Networkable = 195,
	ClassId_CTesla = 190,
	ClassId_CBaseTeamObjectiveResource = 17,
	ClassId_CTeam = 145,
	ClassId_CSunlightShadowControl = 144,
	ClassId_CSun = 143,
	ClassId_CParticlePerformanceMonitor = 101,
	ClassId_CSpotlightEnd = 137,
	ClassId_CSpatialEntity = 136,
	ClassId_CSlideshowDisplay = 132,
	ClassId_CShadowControl = 131,
	ClassId_CSceneEntity = 128,
	ClassId_CRopeKeyframe = 126,
	ClassId_CRagdollManager = 123,
	ClassId_CPhysicsPropMultiplayer = 106,
	ClassId_CPhysBoxMultiplayer = 104,
	ClassId_CPropDoorRotating = 120,
	ClassId_CBasePropDoor = 16,
	ClassId_CDynamicProp = 43,
	ClassId_CProp_Hallucination = 119,
	ClassId_CPostProcessController = 115,
	ClassId_CPointWorldText = 113,
	ClassId_CPointCommentaryNode = 112,
	ClassId_CPointCamera = 111,
	ClassId_CPlayerResource = 110,
	ClassId_CPlasma = 109,
	ClassId_CPhysMagnet = 107,
	ClassId_CPhysicsProp = 105,
	ClassId_CStatueProp = 141,
	ClassId_CPhysBox = 103,
	ClassId_CParticleSystem = 102,
	ClassId_CMovieDisplay = 99,
	ClassId_CMaterialModifyControl = 96,
	ClassId_CLightGlow = 95,
	ClassId_CItemAssaultSuitUseable = 0,
	ClassId_CItem = 0,
	ClassId_CInfoOverlayAccessor = 90,
	ClassId_CFuncTrackTrain = 81,
	ClassId_CFuncSmokeVolume = 80,
	ClassId_CFuncRotating = 79,
	ClassId_CFuncReflectiveGlass = 78,
	ClassId_CFuncOccluder = 77,
	ClassId_CFuncMoveLinear = 76,
	ClassId_CFuncMonitor = 75,
	ClassId_CFunc_LOD = 70,
	ClassId_CTEDust = 165,
	ClassId_CFunc_Dust = 69,
	ClassId_CFuncConveyor = 73,
	ClassId_CFuncBrush = 72,
	ClassId_CBreakableSurface = 28,
	ClassId_CFuncAreaPortalWindow = 71,
	ClassId_CFish = 65,
	ClassId_CFireSmoke = 63,
	ClassId_CEnvTonemapController = 59,
	ClassId_CEnvScreenEffect = 57,
	ClassId_CEnvScreenOverlay = 58,
	ClassId_CEnvProjectedTexture = 55,
	ClassId_CEnvParticleScript = 54,
	ClassId_CFogController = 67,
	ClassId_CEnvDOFController = 53,
	ClassId_CCascadeLight = 30,
	ClassId_CEnvAmbientLight = 51,
	ClassId_CEntityParticleTrail = 50,
	ClassId_CEntityFreezing = 49,
	ClassId_CEntityFlame = 48,
	ClassId_CEntityDissolve = 47,
	ClassId_CDynamicLight = 42,
	ClassId_CColorCorrectionVolume = 33,
	ClassId_CColorCorrection = 32,
	ClassId_CBreakableProp = 27,
	ClassId_CBeamSpotlight = 25,
	ClassId_CBaseButton = 5,
	ClassId_CBaseToggle = 19,
	ClassId_CBasePlayer = 15,
	ClassId_CBaseFlex = 12,
	ClassId_CBaseEntity = 11,
	ClassId_CBaseDoor = 10,
	ClassId_CBaseCombatCharacter = 6,
	ClassId_CBaseAnimatingOverlay = 3,
	ClassId_CBoneFollower = 26,
	ClassId_CBaseAnimating = 2,
	ClassId_CAI_BaseNPC = 0,
	ClassId_CBeam = 24,
	ClassId_CBaseViewModel = 21,
	ClassId_CBaseParticleEntity = 14,
	ClassId_CBaseGrenade = 13,
	ClassId_CBaseCombatWeapon = 7,
	ClassId_CBaseWeaponWorldModel = 23
};

enum ECSPlayerBones
{
    pelvis = 0,
    spine_0,
    spine_1,
    spine_2,
    spine_3,
    neck_0,
    head_0,
    clavicle_L,
    arm_upper_L,
    arm_lower_L,
    hand_L,
    MAX_ECSPLAYERBONES
};

enum EntityFlags
{
    FL_ONGROUND = (1 << 0),
    FL_DUCKING = (1 << 1),
    FL_WATERJUMP = (1 << 2),
    FL_ONTRAIN = (1 << 3),
    FL_INRAIN = (1 << 4),
    FL_FROZEN = (1 << 5),
    FL_ATCONTROLS = (1 << 6),
    FL_CLIENT = (1 << 7),
    FL_FAKECLIENT = (1 << 8),
    MAX_ENTITYFLAGS
};

enum LifeState : unsigned char
{
    LIFE_ALIVE = 0,// alive
    LIFE_DYING = 1, // playing death animation or still falling off of a ledge waiting to hit ground
    LIFE_DEAD = 2, // dead. lying still.
    MAX_LIFESTATE
};

enum WeaponSound_t
{
    EMPTY,
    SINGLE,
    SINGLE_NPC,
    WPN_DOUBLE, // Can't be "DOUBLE" because windows.h uses it.
    DOUBLE_NPC,
    BURST,
    RELOAD,
    RELOAD_NPC,
    MELEE_MISS,
    MELEE_HIT,
    MELEE_HIT_WORLD,
    SPECIAL1,
    SPECIAL2,
    SPECIAL3,
    TAUNT,
    FAST_RELOAD,
    // Add new shoot sound types here
    REVERSE_THE_NEW_SOUND,
    NUM_SHOOT_SOUND_TYPES,
    MAX_WEAPONSOUND
};

enum MoveType_t
{
    MOVETYPE_NONE = 0,
    MOVETYPE_ISOMETRIC,
    MOVETYPE_WALK,
    MOVETYPE_STEP,
    MOVETYPE_FLY,
    MOVETYPE_FLYGRAVITY,
    MOVETYPE_VPHYSICS,
    MOVETYPE_PUSH,
    MOVETYPE_NOCLIP,
    MOVETYPE_LADDER,
    MOVETYPE_OBSERVER,
    MOVETYPE_CUSTOM,
    MOVETYPE_LAST = MOVETYPE_CUSTOM,
    MOVETYPE_MAX_BITS = 4,
    MAX_MOVETYPE
};

enum Collision_Group_t
{
	COLLISION_GROUP_NONE = 0,
	COLLISION_GROUP_DEBRIS,				// Collides with nothing but world and static stuff
	COLLISION_GROUP_DEBRIS_TRIGGER,		// Same as debris, but hits triggers
	COLLISION_GROUP_INTERACTIVE_DEB,	// RIS, // Collides with everything except other interactive debris or debris
	COLLISION_GROUP_INTERACTIVE,		// Collides with everything except interactive debris or debris
	COLLISION_GROUP_PLAYER,
	COLLISION_GROUP_BREAKABLE_GLASS,
	COLLISION_GROUP_VEHICLE,
	COLLISION_GROUP_PLAYER_MOVEMENT,	// For HL2, same as Collision_Group_Player
	COLLISION_GROUP_NPC,				// Generic NPC group
	COLLISION_GROUP_IN_VEHICLE,			// for any entity inside a vehicle
	COLLISION_GROUP_WEAPON,				// for any weapons that need collision detection
	COLLISION_GROUP_VEHICLE_CLIP,		// vehicle clip brush to restrict vehicle movement
	COLLISION_GROUP_PROJECTILE,			// Projectiles!
	COLLISION_GROUP_DOOR_BLOCKER,		// Blocks entities not permitted to get near moving doors
	COLLISION_GROUP_PASSABLE_DOOR,		// Doors that the player shouldn't collide with
	COLLISION_GROUP_DISSOLVING,			// Things that are dissolving are in this group
	COLLISION_GROUP_PUSHAWAY,			// Nonsolid on client and server, pushaway in player code
	COLLISION_GROUP_NPC_ACTOR,			// Used so NPCs in scripts ignore the player.
	LAST_SHARED_COLLISION_GROUP
};

enum mp_break_t
{
	MULTIPLAYER_BREAK_DEFAULT,
	MULTIPLAYER_BREAK_SERVERSIDE,
	MULTIPLAYER_BREAK_CLIENTSIDE,
	MULTIPLAYER_BREAK_BOTH
};

enum propdata_interactions_t
{
	PROPINTER_PHYSGUN_WORLD_STICK,		// "onworldimpact"	"stick"
	PROPINTER_PHYSGUN_FIRST_BREAK,		// "onfirstimpact"	"break"
	PROPINTER_PHYSGUN_FIRST_PAINT,		// "onfirstimpact"	"paintsplat"
	PROPINTER_PHYSGUN_FIRST_IMPALE,		// "onfirstimpact"	"impale"
	PROPINTER_PHYSGUN_LAUNCH_SPIN_NONE,	// "onlaunch"		"spin_none"
	PROPINTER_PHYSGUN_LAUNCH_SPIN_Z,	// "onlaunch"		"spin_zaxis"
	PROPINTER_PHYSGUN_BREAK_EXPLODE,	// "onbreak"		"explode_fire"
	PROPINTER_PHYSGUN_DAMAGE_NONE,		// "damage"			"none"
	PROPINTER_FIRE_FLAMMABLE,			// "flammable"			"yes"
	PROPINTER_FIRE_EXPLOSIVE_RESIST,	// "explosive_resist"	"yes"
	PROPINTER_FIRE_IGNITE_HALFHEALTH,	// "ignite"				"halfhealth"
	PROPINTER_PHYSGUN_CREATE_FLARE,		// "onpickup"		"create_flare"
	PROPINTER_PHYSGUN_ALLOW_OVERHEAD,	// "allow_overhead"	"yes"
	PROPINTER_WORLD_BLOODSPLAT,			// "onworldimpact", "bloodsplat"
	PROPINTER_PHYSGUN_NOTIFY_CHILDREN,	// "onfirstimpact" cause attached flechettes to explode
	PROPINTER_NUM_INTERACTIONS,			// If we get more than 32 of these, we'll need a different system
};

enum FontRenderFlag_t
{
	FONT_LEFT = 0,
	FONT_RIGHT = 1,
	FONT_CENTER = 2
};